---
layout: post
title:      "A National Geographic Gem - Cli Project For Flatiron School"
date:       2020-07-31 10:41:00 -0400
permalink:  a_national_geographic_gem_-_cli_project_for_flatiron_school
---


A National Geographic Gem - Cli Project For Flatiron School
My name is Sana Zaidi and this a post going over my experience working through Flatiron School's final project for the first module in their software engineering program. Nearing the finish point of this assignment has been a huge hurdle over the last couple of weeks. I can't even believe I made it this far. I have struggled these last few weeks grasping the new material and keeping pace with the program schedule. Coding, cli's, object orientation, procedural ruby; all of this is brand new for me. So brand new that just a few weeks ago coding vocabulary was as good as gibberish. Alas, here we are although I have more work ahead of me, finishing this project is a huge win! So lets talk more about that, shall we? 

I decided to create a cli gem using an API through newsapi.org. Instead of using one of the more mainstream news outlets as my source for headlines, I chose the National Geographic to change things up a bit. I had seen other gems created through newsapi and that is why I tried to branch out to explore something new. The purpose of my gem is to pull articles from the api to parse it and display it for the user with a  couple of options to pull up and read the articles from called the "top picks of the day." In order to get the details and data from those articles that I wanted, I had to call on the API through the API class and start with a get_stories class method. The get_stories method ultimately returns a JSON object with the results in an array that we can iterate over. In addition, the api_key method returns a key in a class variable and saves it to the file while keeping it private. 

My Story class was one I enjoyed working through. I created instance variables for the data I wanted to display for the user. Many of the details in the hash was not applicable for a cli program as national geographic many times tells its stories through powerful imagery. For the story class I created the methods that would define the objects to breathe life into the program. The objects created are meant to keep the flow of data through the api class and break it down into new objects that can then be sent over to the CLI class to be displayed elegantly for the user to walk through. I had four main methods that functioned with a relation to the api class. I had a load_stories class method, a create_stories class method, a find_users_choice class method, and a get_details method that were the bulk of the function in extracting the latest data through the api. 

Finally my CLI class was the the more difficult of all of the classes that I had to create. I had a difficult time getting my program to not break and working through the errors. One of the biggest flaws was trying to get my cli to exit on command, however I must have tried setting up the loop in so many different ways before finally changing one little thing that fixed the entire cli. This line was giving me the biggest headache that could not seem to be caught even by my cohort lead; - input = gets.strip. ..the last method in that line, "strip" that was the magic word that seemed to solve all of my problems and had I realized it, it could have probably saved myself four days of work and rework and would have allowed me to finish my project that much sooner. I was originally using .chomp, and that was just creating an endless loop that was not doing anything as it would not allow the user to move forward in the program based off of their input. I am glad I got the help and realized the difference between the two methods, as chomp looks only at end for newline character and removes it, and strip will remove leading and trailing null and whitespace characters from the string being operated on. Chomp operates on the end of strings, while strip operates on the start and end of strings. They are Ruby methods that changes the results of 'gets' in a very specific way and chomp was breaking my if statement. Once I finally realized this, it was an aha moment and it helped me put the finishing touches on my cli class. My cli class is the user end point and the only aspect of this program the user gets to interact with so it takes a bit of planning and trial and error to get it to look the way you want. In addition to my main methods such as list_stories, pick_a_story and choice; where the user can see a list of the top articles displayed, then they can pick and are given an additional option to keep reading if they want to keep going. I included a line_spacing method which is basically creating some spaces to separate the strings and messages and display them in a more clean and readable way for the user. Cli programs are always a little difficult to read inside our terminals so I wanted to make sure everything was clear and cut as day. The user is prompted with one final goodbye message before the program quits. 

There you have it, my cli project in a nutshell. It has been a difficult few weeks but I am so proud of myself for making it this far and some of the things I have realized along the way are that if you are just starting out in your coding journey, you need to be able to give yourself some credit and take those little wins as they come. This is something my husband is constantly reminding me of and its much harder to do when you are in the thick of things but its good to take a step back, tell yourself your doing everything to the best of your ability and keep chugging on. All of those little wins will add up one day. Also please reach out for help! This for me is one of the hardest things to do because I feel like I am bugging somebody and taking away from their time just for them to have to explain some of the most basic concepts, however, learning to ask for help is something you NEED to do to be able to make it out of this curriculum. Especially if coding to you is a whole new world and you are almost learning blindly, which I feel like I am doing sometimes (most of the time.) I have to give it up to Juan, my cohort lead from a previous group and my peers in my current cohort and slack who helped me get to the finish line by taking their time to help explain, reinforce and demonstrate many of these new concepts for me. If I had not reached to any of them, I would be just as lost as I was the day I started. This project is not easy and this learning process for me in particular has been one of the hardest things I am trying to push through. I feel encouraged by the support and I also feel encouraged by the fact that I've learned enough to want to keep going and quitting at this point is not an option, as easy that would be. So if there is any main piece of advise I could give after my project experience, it is to ask for help, and ask for help often. You will not always receive it the way you need but that is even more reason to keep asking and taking your progress one step at a time. Happy coding!
